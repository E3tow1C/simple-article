name: sim-article-prod
services:
  db:
    image: postgres:14
    container_name: database
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - article-network
    restart: unless-stopped

  minio:
    image: quay.io/minio/minio
    container_name: storage
    ports:
      - 9000:9000
      - 9001:9001
    user: "${UID}:${GID}"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - article-network
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    
  web:
    container_name: web
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:3000"
    depends_on:
      - db
      - minio
    networks:
      - article-network
    restart: unless-stopped
    env_file:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET=${MINIO_BUCKET}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}

networks:
  article-network:

volumes:
  minio_data:
  postgres_data:    
